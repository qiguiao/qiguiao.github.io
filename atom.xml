<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>齐贵奥</title>
  
  <subtitle>jaket.qi is a web developer</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://qiguiao.github.io/"/>
  <updated>2018-07-20T02:22:42.000Z</updated>
  <id>https://qiguiao.github.io/</id>
  
  <author>
    <name>齐贵奥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序封装组件与引用</title>
    <link href="https://qiguiao.github.io/2018/07/23/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B0%81%E8%A3%85%E7%BB%84%E4%BB%B6%E4%B8%8E%E5%BC%95%E7%94%A8/"/>
    <id>https://qiguiao.github.io/2018/07/23/微信小程序封装组件与引用/</id>
    <published>2018-07-23T02:29:51.575Z</published>
    <updated>2018-07-20T02:22:42.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>在与 pages 同级目录创建 components文件夹 </p></li><li><p>在components 下 创建一个文件夹(要创建的组件的名称)</p></li><li><p>在 2 的文件夹上右键 新建-&gt;Components (这时会出现一套文件 .js .json .wxml .wxss)</p></li><li><p>正常写HTML 和 css一样去书写代码 ， 在刚刚生成的.json中 书写</p></li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"component"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="attr">"usingComponents"</span>: &#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在刚刚生成的.js文件中 要抛出方法(抛出方法的前提是 你需要在wxml上绑定方法)</li></ol><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">  绑定方法 wxml</span><br><span class="line"></span><br><span class="line">  &lt;view <span class="keyword">class</span>=<span class="string">'modal-btn-cancel'</span> bindtap=<span class="string">'cancelEvent'</span>&gt;取消&lt;/view&gt;</span><br><span class="line">  &lt;view <span class="keyword">class</span>=<span class="string">'modal-btn-sure'</span> bindtap=<span class="string">"loginOutEvent"</span>&gt;退出登录&lt;/view&gt;</span><br><span class="line"></span><br><span class="line">  抛出 js</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 组件的方法列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">methods: &#123;</span><br><span class="line">  toastShow(str)&#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    _this.setData(&#123;</span><br><span class="line">      isShow:<span class="literal">true</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  toastHide(str) &#123;</span><br><span class="line">    <span class="keyword">var</span> _this = <span class="keyword">this</span>;</span><br><span class="line">    _this.setData(&#123;</span><br><span class="line">      isShow: <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  cancelEvent()&#123;</span><br><span class="line">    <span class="keyword">this</span>.triggerEvent(<span class="string">"cancelEvent"</span>)     <span class="comment">//!!!!!!这是重点</span></span><br><span class="line">  &#125;,</span><br><span class="line">  loginOutEvent()&#123;</span><br><span class="line">    <span class="keyword">this</span>.triggerEvent(<span class="string">"loginOutEvent"</span>)    <span class="comment">//!!!!!!这是重点</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>调用你写的组件(找到需要用组件的页面的 .json 例：我需要在 “我的页面”中用到组件  在pages/mine/mine.json)</li></ol><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">书写一下代码</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">"navigationBarTitleText"</span>: <span class="string">"我的"</span>,</span><br><span class="line">  <span class="string">"usingComponents"</span>: &#123;</span><br><span class="line">    <span class="string">"new-modal"</span>:<span class="string">"/components/new-model/new-model"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>在对应页面上调用(pages/mine/mine.wxml)</li></ol><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">书写一下代码(你会发现这个组件的名称是你在json中的 那个名称  <span class="literal">Yes</span>)</span><br><span class="line"></span><br><span class="line">&lt;new-modal <span class="attribute">class</span>=<span class="string">"modal-modal"</span> bind:<span class="attribute">cancelEvent</span>=<span class="string">"cancelEventssss"</span> bind:<span class="attribute">loginOutEvent</span>=<span class="string">"loginOutEventssss"</span>&gt;&lt;/new-modal&gt;</span><br></pre></td></tr></table></figure><ol start="8"><li>在对应的js中调用(pages/mine/mine.js)</li></ol><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生命周期函数--监听页面加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"> 需要在生命周期中绑定一下</span><br><span class="line"></span><br><span class="line">onLoad: <span class="function"><span class="keyword">function</span> <span class="params">(options)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">this</span>.modal = <span class="keyword">this</span>.selectComponent(<span class="string">'.modal-modal'</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Event（事件中调用）</span><br><span class="line"></span><br><span class="line">cancelEventssss:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.modal.toastHide()</span><br><span class="line">&#125;,</span><br><span class="line"> loginOutEventssss:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.modal.toastHide()</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>说明</p><p>小程序组件的用途在于 一次封装多次调用，减少copy时间</p><p>希望能够帮助到正在奋斗路上的你</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;在与 pages 同级目录创建 components文件夹 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在components 下 创建一个文件夹(要创建的组件的名称)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在 2 的文件夹上右键 新建-&amp;gt;Components 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Charles抓包教程</title>
    <link href="https://qiguiao.github.io/2018/07/23/Charles%E6%8A%93%E5%8C%85%E6%95%99%E7%A8%8B/"/>
    <id>https://qiguiao.github.io/2018/07/23/Charles抓包教程/</id>
    <published>2018-07-23T02:29:51.549Z</published>
    <updated>2018-07-23T09:44:25.604Z</updated>
    
    <content type="html"><![CDATA[<pre><code>(下载抓包工具 ↓↓↓↓↓)</code></pre><ul><li><a href="http://xclient.info/s/6/?t=58c9317566d718aa421993eddfe2c9ae9d378d0c" target="_blank" rel="noopener">点我下载抓包工具</a></li></ul><ol><li><p>手动安装 一路next</p></li><li><p>手机wifi和电脑wifi必须一致。</p></li><li><p>打开电脑wifi查看其ip地址（mac为 打开网络偏好设置， Windows自行查找）。</p></li><li><p>打开手机wifi修改代理  </p><p> 显示高级选项</p><p> 服务器主机名  为 wifi ip地址</p><p> 服务器端口号 8888</p><p> 保存</p></li><li><p>打开charles工具 </p><p>黄色小刷子 代表清空 </p><p>红色按钮代表 开始 暂停 </p></li><li><p>点开将要抓包的应用 即可看到发出的请求</p></li><li><p>可以起飞了。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;pre&gt;&lt;code&gt;(下载抓包工具 ↓↓↓↓↓)
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://xclient.info/s/6/?t=58c9317566d718aa421993eddfe2c9ae9d378d0c&quot; target=&quot;_blank
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微信小程序封装wx.request()请求</title>
    <link href="https://qiguiao.github.io/2018/04/28/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B0%81%E8%A3%85request/"/>
    <id>https://qiguiao.github.io/2018/04/28/微信小程序封装request/</id>
    <published>2018-04-28T06:21:47.453Z</published>
    <updated>2018-04-28T06:22:10.433Z</updated>
    
    <content type="html"><![CDATA[<p>先封装common方便域名更改</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line"><span class="symbol">  requestPath:</span> <span class="string">"https:"</span>,   <span class="comment">//开发 ， 测试 ，生产 ，域名都可以</span></span><br><span class="line"><span class="symbol">  apisPath:</span> <span class="string">"https:"</span>,</span><br><span class="line"><span class="symbol">  ossImgPath:</span> <span class="string">"http:"</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>封装server.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> config = <span class="built_in">require</span>(<span class="string">'../common/config.js'</span>);</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  request: <span class="function"><span class="keyword">function</span> (<span class="params">params</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> signinStorage = wx.getStorageSync(<span class="string">'signinStorage'</span>) || &#123;&#125;;</span><br><span class="line">    <span class="keyword">var</span> url = (params.apis ? config.apisPath : config.requestPath) + params.url;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">      wx.request(&#123;</span><br><span class="line">        url: url, <span class="comment">//仅为示例，并非真实的接口地址</span></span><br><span class="line">        data: params.data || &#123;&#125;,</span><br><span class="line">        method: params.method || <span class="string">'GET'</span>,</span><br><span class="line">        header: &#123;</span><br><span class="line">          <span class="string">'content-type'</span>: <span class="string">'application/json'</span>,</span><br><span class="line">          <span class="comment">// 'X-ECAPI-Authorization':"bearer "+signinStorage.token || '',</span></span><br><span class="line">          <span class="string">'Authorization'</span>: <span class="string">"bearer "</span> + signinStorage.token || <span class="string">''</span></span><br><span class="line">          </span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (res.data.error_code == <span class="number">10001</span>) &#123;</span><br><span class="line">            <span class="keyword">var</span> pages = getCurrentPages();</span><br><span class="line">            <span class="keyword">var</span> currentPages = pages[pages.length - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">var</span> path = currentPages.route.replace(<span class="string">'pages/'</span>, <span class="string">'../'</span>);</span><br><span class="line">            <span class="keyword">var</span> opt = <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">if</span> (currentPages.options) &#123;</span><br><span class="line">              <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> currentPages.options) &#123;</span><br><span class="line">                opt += <span class="string">'_a_'</span> + k + <span class="string">'_e_'</span> + currentPages.options[k];</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// _a_  &amp;</span></span><br><span class="line">            <span class="comment">// _e_  =</span></span><br><span class="line">            <span class="comment">// _q_  ?</span></span><br><span class="line">            <span class="keyword">if</span> (opt) &#123;</span><br><span class="line">              opt = opt.replace(<span class="string">'_a_'</span>, <span class="string">''</span>)</span><br><span class="line">              path += <span class="string">'_q_'</span> + opt;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// wx.redirectTo(&#123;</span></span><br><span class="line">            <span class="comment">//   url:'../login/login?done='+path</span></span><br><span class="line">            <span class="comment">// &#125;)</span></span><br><span class="line">            wx.navigateTo(&#123;</span><br><span class="line">              url: <span class="string">'../login/login?done='</span> + path</span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            resolve(res.data)</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  mobileTest: <span class="regexp">/^1\d&#123;10&#125;$/</span>,</span><br><span class="line">  changeConsignee: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用 </p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> services = require(<span class="string">'../services/services.js'</span>);</span><br><span class="line"></span><br><span class="line">services.request(&#123;</span><br><span class="line">      url:<span class="string">'api/aa/aa'</span>,   <span class="comment">//api</span></span><br><span class="line">      method:<span class="string">'POST'</span>,     <span class="comment">//请求方式</span></span><br><span class="line">      <span class="keyword">data</span>:&#123;</span><br><span class="line">        page: <span class="keyword">this</span>.<span class="keyword">data</span>.page   <span class="comment">//传入参数</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;).then((<span class="keyword">data</span>)=&gt;&#123;</span><br><span class="line">      </span><br><span class="line">      <span class="comment">// 返回值</span></span><br><span class="line">      </span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><p>说明</p><p>利用Promise封装请求,引入地址方便更换。</p><p>调用方式简单，无需过多操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;先封装common方便域名更改&lt;/p&gt;
&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React封装Picker，适用于Mobile</title>
    <link href="https://qiguiao.github.io/2018/04/28/React%E5%B0%81%E8%A3%85Picker/"/>
    <id>https://qiguiao.github.io/2018/04/28/React封装Picker/</id>
    <published>2018-04-28T06:21:47.449Z</published>
    <updated>2018-04-28T06:09:18.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> React from <span class="string">'react'</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; Picker &#125; from <span class="string">'antd-mobile'</span>;</span><br><span class="line">export <span class="keyword">default</span> <span class="keyword">class</span> DatePicker <span class="keyword">extends</span> React.Component &#123;</span><br><span class="line">  state=&#123;</span><br><span class="line">    data:[]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidMount()&#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; <span class="keyword">value</span> &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">value</span>) <span class="keyword">this</span>.setState(&#123;<span class="keyword">value</span>&#125;);</span><br><span class="line">    <span class="keyword">this</span>.init()</span><br><span class="line">  &#125;</span><br><span class="line">  init=()=&gt;&#123;</span><br><span class="line">    <span class="comment">//当前年月日</span></span><br><span class="line">    <span class="keyword">let</span> date = <span class="keyword">new</span> Date(), data=[];</span><br><span class="line">    <span class="keyword">let</span> year = date.getFullYear();</span><br><span class="line">    <span class="keyword">let</span> month = date.getMonth() + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">let</span> day = date.getDate();</span><br><span class="line">    <span class="comment">// 放入一个数组</span></span><br><span class="line">     <span class="keyword">let</span> <span class="keyword">value</span> = [year,month,day,<span class="number">1</span>];</span><br><span class="line">    <span class="comment">//  获取年月</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=year-<span class="number">1</span>;i&lt;=year+<span class="number">1</span>;i++)&#123;</span><br><span class="line">      <span class="keyword">let</span> year<span class="number">_</span>data = &#123;label:i,<span class="keyword">value</span>:i,children:[]&#125;;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">let</span> j=<span class="number">1</span>;j&lt;=<span class="number">12</span>;j++)&#123;</span><br><span class="line">        year<span class="number">_</span>data.children.push(&#123;label:j,<span class="keyword">value</span>:j&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 装入数组</span></span><br><span class="line">      data.push(year<span class="number">_</span>data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 调用方法</span></span><br><span class="line">    <span class="keyword">let</span> datas = <span class="keyword">this</span>.get<span class="number">_</span>days(data, <span class="keyword">value</span>);</span><br><span class="line">    <span class="keyword">this</span>.setState(&#123;data:datas.data,<span class="keyword">value</span>:datas.<span class="keyword">value</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  get<span class="number">_</span>days=(data=[],<span class="keyword">value</span>=[])=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> f<span class="number">_</span>index = -<span class="number">1</span>, s<span class="number">_</span>index = <span class="keyword">value</span>[<span class="number">1</span>]-<span class="number">1</span>;</span><br><span class="line">    data.map((e, i)=&gt;&#123;</span><br><span class="line">      <span class="keyword">if</span>(e.<span class="keyword">value</span>===<span class="keyword">value</span>[<span class="number">0</span>]) f<span class="number">_</span>index = i;</span><br><span class="line">      <span class="keyword">return</span> e;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">value</span>[<span class="number">0</span>] &amp;&amp; <span class="keyword">value</span>[<span class="number">1</span>])&#123;</span><br><span class="line">      <span class="keyword">if</span>(!data[f<span class="number">_</span>index].children[s<span class="number">_</span>index].children)&#123;</span><br><span class="line">        <span class="keyword">let</span> len = <span class="keyword">new</span> Date(<span class="keyword">value</span>[<span class="number">0</span>], <span class="keyword">value</span>[<span class="number">1</span>], <span class="number">0</span>).getDate();</span><br><span class="line">        data[f<span class="number">_</span>index].children[s<span class="number">_</span>index].children=[];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">1</span>;i&lt;=len;i++)&#123;</span><br><span class="line">          data[f<span class="number">_</span>index].children[s<span class="number">_</span>index].children.push(&#123;</span><br><span class="line">            label:i,</span><br><span class="line">            <span class="keyword">value</span>:i,</span><br><span class="line">            children:[&#123;</span><br><span class="line">              label: <span class="string">'00:00-12:00'</span>,</span><br><span class="line">              <span class="keyword">value</span>: <span class="string">'00:00-12:00'</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              label: <span class="string">'12:00-17:00'</span>,</span><br><span class="line">              <span class="keyword">value</span>: <span class="string">'12:00-17:00'</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              label: <span class="string">'17:00-24:00'</span>,</span><br><span class="line">              <span class="keyword">value</span>: <span class="string">'17:00-24:00'</span>,</span><br><span class="line">            &#125;]</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123;data,<span class="keyword">value</span>, cur<span class="number">_m</span>onth<span class="number">_</span>days:data[f<span class="number">_</span>index].children[s<span class="number">_</span>index].children&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  onPickerChange=(v)=&gt;&#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; <span class="keyword">value</span>, data &#125; = <span class="keyword">this</span>.state;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">value</span>[<span class="number">0</span>]!==v[<span class="number">0</span>]||<span class="keyword">value</span>[<span class="number">1</span>]!==v[<span class="number">1</span>])&#123;</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">value</span>[<span class="number">0</span>]!==v[<span class="number">0</span>]) v[<span class="number">1</span>] = <span class="keyword">value</span>[<span class="number">1</span>];</span><br><span class="line">      <span class="keyword">let</span> datas = <span class="keyword">this</span>.get<span class="number">_</span>days(data, v);</span><br><span class="line">      <span class="keyword">if</span>(<span class="keyword">value</span>[<span class="number">2</span>]) v[<span class="number">2</span>]=datas.cur<span class="number">_m</span>onth<span class="number">_</span>days[<span class="keyword">value</span>[<span class="number">2</span>]-<span class="number">1</span>]?<span class="keyword">value</span>[<span class="number">2</span>]:datas.cur<span class="number">_m</span>onth<span class="number">_</span>days[datas.cur<span class="number">_m</span>onth<span class="number">_</span>days.length-<span class="number">1</span>].<span class="keyword">value</span>;</span><br><span class="line">      <span class="keyword">if</span>(!v[<span class="number">2</span>]) v[<span class="number">2</span>]=<span class="number">1</span>;</span><br><span class="line">      v[<span class="number">3</span>]=<span class="keyword">value</span>[<span class="number">3</span>]||<span class="number">1</span>;</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">        data:datas.data,</span><br><span class="line">        <span class="keyword">value</span>:v</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">if</span>(v[<span class="number">2</span>]!==<span class="keyword">value</span>[<span class="number">2</span>]) v[<span class="number">3</span>] = <span class="keyword">value</span>[<span class="number">3</span>];</span><br><span class="line">      <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">        <span class="keyword">value</span>:v</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  render() &#123;</span><br><span class="line">    <span class="keyword">let</span> &#123; data &#125; = <span class="keyword">this</span>.state, &#123; children, onOk &#125; = <span class="keyword">this</span>.props;</span><br><span class="line">    <span class="keyword">return</span>(</span><br><span class="line">      &lt;Picker</span><br><span class="line">        data=&#123;data&#125;</span><br><span class="line">        cols=&#123;<span class="number">4</span>&#125;</span><br><span class="line">        title=<span class="string">"Calendar"</span></span><br><span class="line">        cascade=&#123;true&#125;</span><br><span class="line">        extra=<span class="string">"请选择(可选)"</span></span><br><span class="line">        okText=<span class="string">"Done"</span></span><br><span class="line">        dismissText=<span class="string">"Close"</span></span><br><span class="line">        <span class="keyword">value</span>=&#123;<span class="keyword">this</span>.state.<span class="keyword">value</span>&#125;</span><br><span class="line">        onPickerChange=&#123;<span class="keyword">this</span>.onPickerChange&#125;</span><br><span class="line">        onOk=&#123;v =&gt;  onOk(v)&#125;</span><br><span class="line">        className=<span class="string">"date_picker"</span></span><br><span class="line">      &gt;</span><br><span class="line">        &#123;children&#125;</span><br><span class="line">      &lt;/Picker&gt;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> DatePicker <span class="keyword">from</span> <span class="string">'component/DatePicker'</span>;</span><br><span class="line">&lt;DatePicker onOk=&#123;(v) =&gt; <span class="built_in">console</span>.log(v)&#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">DatePicker</span>&gt;</span></span></span><br><span class="line"><span class="built_in">console</span>.log(v) v是 年 月 日 时</span><br></pre></td></tr></table></figure><p>说明</p><p>适用于ReactMobile，选取时间。</p><p>如果要进行时间加减换算，需注意，安卓和ios有兼容问题,</p><p>安卓可识别2018-04-29 和 2018/04/29,</p><p>ios识别 2018/04/29,</p><p>根据情况可采取 v.replace(/-/g,”/“);</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight ceylon&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React封装Icon</title>
    <link href="https://qiguiao.github.io/2018/04/28/React%E5%B0%81%E8%A3%85Icon/"/>
    <id>https://qiguiao.github.io/2018/04/28/React封装Icon/</id>
    <published>2018-04-28T06:21:47.446Z</published>
    <updated>2018-04-28T06:15:26.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import React from 'react';</span><br><span class="line">import &#123; Icon &#125; from 'antd-mobile';</span><br><span class="line">export default class RIcon  extends React.Component &#123;</span><br><span class="line">  render()&#123;</span><br><span class="line">    <span class="built_in">let</span> <span class="built_in">props</span> = this.<span class="built_in">props</span>;</span><br><span class="line">    <span class="built_in">let</span> isIconfont = /^ifont-/.test(<span class="built_in">props</span>.type);</span><br><span class="line">    const iconComponent = isIconfont?(</span><br><span class="line">      &lt;i className=&#123;`ifont $&#123;<span class="built_in">props</span>.type&#125; $&#123;<span class="built_in">props</span>.spin?'anticon-spin':''&#125;  $&#123;<span class="built_in">props</span>.className&#125;`&#125; onClick=&#123;<span class="built_in">props</span>.onClick&#125; <span class="built_in">style</span>=&#123;&#123;...<span class="built_in">props</span>.<span class="built_in">style</span>, fontSize: `$&#123;<span class="built_in">props</span>.size || <span class="number">14</span>&#125;px`, <span class="built_in">color</span>: <span class="built_in">props</span>.<span class="built_in">color</span> &#125;&#125;&gt;&lt;/i&gt;</span><br><span class="line">    ):(</span><br><span class="line">    &lt;Icon <span class="built_in">title</span>=&#123;<span class="built_in">props</span>.<span class="built_in">title</span>||''&#125; type=&#123;<span class="built_in">props</span>.type&#125; spin=&#123;<span class="built_in">props</span>.spin&#125; onClick=&#123;<span class="built_in">props</span>.onClick&#125; className=&#123;<span class="built_in">props</span>.className&#125; <span class="built_in">style</span>=&#123;&#123;...<span class="built_in">props</span>.<span class="built_in">style</span>, fontSize: `$&#123;<span class="built_in">props</span>.size || <span class="number">14</span>&#125;px`, <span class="built_in">color</span>: <span class="built_in">props</span>.<span class="built_in">color</span>&#125;&#125; /&gt;</span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">return</span>(</span><br><span class="line">      iconComponent</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">`</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">调用</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Icon  <span class="keyword">from</span> <span class="string">'../../componen/Icon'</span>;</span><br><span class="line">&lt;Icon tyep=”home“/&gt;</span><br></pre></td></tr></table></figure><p>说明 </p><p>适用于 reactMobile，在antdMobile原有基础改善。</p><p>修改为引入为 antd 也可适用于 PC。</p><p>封装icon组件，方便调用 只需<icon tyep="”home“/">即可调用。</icon></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight maxima&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTML问题综述</title>
    <link href="https://qiguiao.github.io/2018/04/28/HTTP%EF%BC%8CHTML%E9%97%AE%E9%A2%98%E7%BB%BC%E8%BF%B0/"/>
    <id>https://qiguiao.github.io/2018/04/28/HTTP，HTML问题综述/</id>
    <published>2018-04-28T06:21:47.425Z</published>
    <updated>2018-04-28T06:16:20.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="HTTP状态码及其含义"><a href="#HTTP状态码及其含义" class="headerlink" title="HTTP状态码及其含义"></a>HTTP状态码及其含义</h4><p>•    1XX：信息状态码 </p><p>o    100 Continue 继续，一般在发送post请求时，已发送了http header之后服务端将返回此信息，表示确认，之后发送具体参数信息</p><p>•    2XX：成功状态码 </p><p>o    200 OK 正常返回信息</p><p>o    201 Created 请求成功并且服务器创建了新的资源</p><p>o    202 Accepted 服务器已接受请求，但尚未处理</p><p>•    3XX：重定向 </p><p>o    301 Moved Permanently 请求的网页已永久移动到新位置。</p><p>o    302 Found 临时性重定向。</p><p>o    303 See Other 临时性重定向，且总是使用 GET 请求新的 URI。</p><p>o    304 Not Modified 自从上次请求后，请求的网页未修改过。</p><p>•    4XX：客户端错误 </p><p>o    400 Bad Request 服务器无法理解请求的格式，客户端不应当尝试再次使用相同的内容发起请求。</p><p>o    401 Unauthorized 请求未授权。</p><p>o    403 Forbidden 禁止访问。</p><p>o    404 Not Found 找不到如何与 URI 相匹配的资源。</p><p>•    5XX: 服务器错误 </p><p>o    500 Internal Server Error 最常见的服务器端错误。</p><p>o    503 Service Unavailable 服务器端暂时无法处理请求（可能是过载或维护）。</p><h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><pre><code>语义化的理解</code></pre><p>•    用正确的标签做正确的事情！</p><p>•    html语义化就是让页面的内容结构化，便于对浏览器、搜索引擎解析；</p><p>•    在没有样式CSS情况下也以一种文档格式显示，并且是容易阅读的。</p><p>•    搜索引擎的爬虫依赖于标记来确定上下文和各个关键字的权重，利于 SEO。</p><p>•    使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解</p><pre><code>对浏览器内核的理解</code></pre><p>•    主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎</p><p>•    渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核</p><p>•    JS引擎则：解析和执行javascript来实现网页的动态效果</p><p>•    最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内核就倾向于只指渲染引擎</p><pre><code>HTML5的离线储存使用，工作原理</code></pre><p>•在用户没有与因特网连接时，可以正常访问站点或应用，在用户与因特网连接时，更新用户机器上的缓存文件</p><p>•    原理：HTML5的离线存储是基于一个新建的.appcache文件的缓存机制(不是存储技术)，通过这个文件上的解析清单离线存储资源，这些资源就会像cookie一样被存储了下来。之后当网络在处于离线状态下时，浏览器会通过被离线存储的数据进行页面展示</p><p>•    如何使用：</p><p>o    页面头部像下面一样加入一个manifest的属性；</p><p>o    在cache.manifest文件的编写离线存储的资源</p><p>o    在离线状态时，操作window.applicationCache进行需求实现<br>CACHE MANIFEST #v0.11 CACHE: js/app.js css/style.css NETWORK: resourse/logo.png FALLBACK: / /offline.html </p><pre><code>描述一下 cookies，sessionStorage 和 localStorage 的区别</code></pre><p>•    cookie是网站为了标示用户身份而储存在用户本地终端（Client Side）上的数据（通常经过加密）</p><p>•    cookie数据始终在同源的http请求中携带（即使不需要），记会在浏览器和服务器间来回传递</p><p>•    sessionStorage和localStorage不会自动把数据发给服务器，仅在本地保存</p><p>•    存储大小：</p><p>o    cookie数据大小不能超过4k</p><p>o    sessionStorage和localStorage虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大</p><p>•    有期时间：</p><p>o    localStorage 存储持久数据，浏览器关闭后数据不丢失除非主动删除数据</p><p>o    sessionStorage 数据在当前浏览器窗口关闭后自动删除</p><p>o    cookie 设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭</p><pre><code>WEB标准以及W3C标准是什么</code></pre><p> •标签闭合、标签小写、不乱嵌套、使用外链css和js、结构行为表现的分离</p><pre><code>xhtml和html有什么区别</code></pre><p>•    一个是功能上的差别</p><p>o    主要是XHTML可兼容各大浏览器、手机以及PDA，并且浏览器也能快速正确地编译网页</p><p>•    另外是书写习惯的差别</p><p>o    XHTML 元素必须被正确地嵌套，闭合，区分大小写，文档必须拥有根元素</p><pre><code>Doctype作用，严格模式与混杂模式如何区分 它们有何意义 </code></pre><p>•    页面被加载的时，link会同时被加载，而@imort页面被加载的时，link会同时被加载，而@import引用的CSS会等到页面被加载完再加载import只在IE5以上才能识别，而link是XHTML标签，无兼容问题link方式的样式的权重 高于@import的权重</p><p>•    &lt;!DOCTYPE&gt; 声明位于文档中的最前面，处于 <html> 标签之前。告知浏览器的解析器， 用什么文档类型 规范来解析这个文档</html></p><p>•    严格模式的排版和 JS 运作模式是 以该浏览器支持的最高标准运行</p><p>•    在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。 DOCTYPE不存在或格式不正确会导致文档以混杂模式呈现</p><pre><code>Canvas和SVG有什么区别</code></pre><p>•    svg绘制出来的每一个图形的元素都是独立的DOM节点，能够方便的绑定事件或用来修改。canvas输出的是一整幅画布</p><p>•    svg输出的图形是矢量图形，后期可以修改参数来自由放大缩小，不会是真和锯齿。而canvas输出标量画布，就像一张图片一样，放大会失真或者锯齿</p><pre><code>网页验证码是干嘛的，是为了解决什么安全问题</code></pre><p>•    区分用户是计算机还是人的公共全自动程序。可以防止恶意破解密码、刷票、论坛灌水</p><p>•    有效防止黑客对某一个特定注册用户用特定程序暴力破解方式进行不断的登陆尝试</p><pre><code>css3有哪些新特性</code></pre><p>•    新增各种css选择器</p><p>•    圆角 border-radius </p><p>•    多列布局</p><p>•    阴影和反射</p><p>•    文字特效text-shadow </p><p>•    线性渐变</p><pre><code>CSS3新增伪类有那些</code></pre><p>•    p:first-of-type 选择属于其父元素的首个p元素的每个p 元素。</p><p>•    p:last-of-type 选择属于其父元素的最后 p 元素的每个p 元素。</p><p>•    p:only-of-type 选择属于其父元素唯一的 p元素的每个 p 元素。</p><p>•    p:only-child 选择属于其父元素的唯一子元素的每个 p 元素。</p><p>•    p:nth-child(2) 选择属于其父元素的第二个子元素的每个 p 元素。</p><p>•    :after 在元素之前添加内容,也可以用来做清除浮动。</p><p>•    :before 在元素之后添加内容</p><p>•    :enabled</p><p>•    :disabled 控制表单控件的禁用状态。</p><p>•    :checked 单选框或复选框被选中</p><pre><code>异步加载JS的方式</code></pre><p>•    defer，只支持IE </p><p>•    async：</p><p>•    创建script，插入到DOM中，加载完毕后callBack </p><pre><code>常见web安全及防护原理</code></pre><p>•    sql注入原理</p><p>o    就是通过把SQL命令插入到Web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令</p><p>•    总的来说有以下几点</p><p>o    永远不要信任用户的输入，要对用户的输入进行校验，可以通过正则表达式，或限制长度，对单引号和双”-“进行转换等</p><p>o    永远不要使用动态拼装SQL，可以使用参数化的SQL或者直接使用存储过程进行数据查询存取</p><p>o    永远不要使用管理员权限的数据库连接，为每个应用使用单独的权限有限的数据库连接</p><p>o    不要把机密信息明文存放，请加密或者hash掉密码和敏感的信息</p><p>XSS原理及防范</p><p>•    Xss(cross-site scripting)攻击指的是攻击者往Web页面里插入恶意html标签或者javascript代码。比如：攻击者在论坛中放一个看似安全的链接，骗取用户点击后，窃取cookie中的用户私密信息；或者攻击者在论坛中加一个恶意表单，当用户提交表单的时候，却把信息传送到攻击者的服务器中，而不是用户原本以为的信任站点<br>XSS防范方法</p><p>•    首先代码里对用户输入的地方和变量都需要仔细检查长度和对”&lt;”,”&gt;”,”;”,”’”等字符做过滤；其次任何内容写到页面之前都必须加以encode，避免不小心把html tag 弄出来。这一个层面做好，至少可以堵住超过一半的XSS 攻击</p><p>XSS与CSRF有什么区别吗？</p><p>•    XSS是获取信息，不需要提前知道其他用户页面的代码和数据包。CSRF是代替用户完成指定的动作，需要知道其他用户页面的代码和数据包。要完成一次CSRF攻击，受害者必须依次完成两个步骤</p><p>•    登录受信任网站A，并在本地生成Cookie</p><p>•    在不登出A的情况下，访问危险网站B</p><p>CSRF的防御</p><p>•    服务端的CSRF方式方法很多样，但总的思想都是一致的，就是在客户端页面增加伪随机数</p><p>•    通过验证码的方法</p><pre><code>设计模式</code></pre><p>•    工厂模式：</p><p>o    工厂模式解决了重复实例化的问题，但还有一个问题,那就是识别问题，因为根本无法</p><p>o    主要好处就是可以消除对象间的耦合，通过使用工程方法而不是new关键字</p><p>•    构造函数模式</p><p>o    使用构造函数的方法，即解决了重复实例化的问题，又解决了对象识别的问题，该模式与工厂模式的不同之处在于</p><p>o    直接将属性和方法赋值给 this对象;</p><pre><code>offsetWidth/offsetHeight,clientWidth/clientHeight与scrollWidth/scrollHeight的区别</code></pre><p>•    offsetWidth/offsetHeight返回值包含content + padding + border，效果与e.getBoundingClientRect()相同</p><p>•    clientWidth/clientHeight返回值只包含content + padding，如果有滚动条，也不包含滚动条 </p><p>•    scrollWidth/scrollHeight返回值包含content + padding + 溢出内容的尺寸 </p><pre><code>说说你对promise的了解</code></pre><p>•    依照 Promise/A+ 的定义，Promise 有四种状态：</p><p>o    pending: 初始状态, 非 fulfilled 或 rejected.</p><p>o    fulfilled: 成功的操作.</p><p>o    rejected: 失败的操作.</p><p>o    settled: Promise已被fulfilled或rejected，且不是pending</p><p>•    另外， fulfilled与 rejected一起合称 settled</p><p>•    Promise 对象用来进行延迟(deferred) 和异步(asynchronous) 计算<br><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var promise = new Promise(<span class="name">function</span>(<span class="name">resolve</span>, reject) &#123; </span><br><span class="line"></span><br><span class="line">             if (...) &#123; </span><br><span class="line"></span><br><span class="line">                  // succeed              resolve(<span class="name">result</span>)<span class="comment">; </span></span><br><span class="line"></span><br><span class="line">            &#125; else &#123;  </span><br><span class="line"></span><br><span class="line">                 // fails           reject(<span class="name">Error</span>(<span class="name">errMessage</span>))<span class="comment">; </span></span><br><span class="line">            </span><br><span class="line">            &#125;     &#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure></p><p>•    Promise 实例拥有 then 方法（具有 then 方法的对象，通常被称为thenable）。它的使用方法如下：<br>promise.then(onFulfilled, onRejected) </p><p>•    接收两个函数作为参数，一个在 fulfilled 的时候被调用，一个在rejected的时候被调用，接收参数就是 future，onFulfilled 对应resolve, onRejected对应 reject </p><pre><code>箭头函数与普通函数的区别</code></pre><p>•    函数体内的this对象，就是定义时所在的对象，而不是使用时所在的对象</p><p>•    不可以当作构造函数，也就是说，不可以使用new命令，否则会抛出一个错误</p><p>•    不可以使用arguments对象，该对象在函数体内不存在。如果要用，可以用Rest参数代替</p><p>•    不可以使用yield命令，因此箭头函数不能用作Generator函数</p><p>未完待续。。。。。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;HTTP状态码及其含义&quot;&gt;&lt;a href=&quot;#HTTP状态码及其含义&quot; class=&quot;headerlink&quot; title=&quot;HTTP状态码及其含义&quot;&gt;&lt;/a&gt;HTTP状态码及其含义&lt;/h4&gt;&lt;p&gt;•    1XX：信息状态码 &lt;/p&gt;
&lt;p&gt;o    100 Co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React封装倒计时</title>
    <link href="https://qiguiao.github.io/2018/04/27/React%E5%B0%81%E8%A3%85%E5%80%92%E8%AE%A1%E6%97%B6/"/>
    <id>https://qiguiao.github.io/2018/04/27/React封装倒计时/</id>
    <published>2018-04-27T09:51:09.048Z</published>
    <updated>2018-04-28T06:20:43.790Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//倒计时</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> React <span class="keyword">from</span> <span class="string">'react'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CountDown</span> <span class="keyword">extends</span> <span class="title">React</span>.<span class="title">Component</span></span>&#123;</span><br><span class="line">    state =&#123;</span><br><span class="line">        value:<span class="string">'cutdown'</span></span><br><span class="line">    &#125;</span><br><span class="line">    componentDidMount () &#123;</span><br><span class="line">        <span class="keyword">let</span> &#123;time=<span class="string">""</span>,event=&#123;&#125;,leaveID=<span class="string">""</span>,value&#125; = <span class="keyword">this</span>.props;</span><br><span class="line">        <span class="keyword">let</span> &#123;actions=&#123;&#125;&#125; = event;</span><br><span class="line">        <span class="keyword">var</span> time_end,str_time;</span><br><span class="line">        time_end = <span class="keyword">new</span> <span class="built_in">Date</span>(time);<span class="comment">//结束的时间</span></span><br><span class="line">        time_end = time_end.getTime();   <span class="comment">//结束时间的时间戳</span></span><br><span class="line">        setInterval(show_time,<span class="number">1000</span>)</span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">show_time</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!time) &#123; <span class="keyword">return</span>; &#125;</span><br><span class="line">                <span class="keyword">var</span> time_now, time_distance;</span><br><span class="line">                <span class="keyword">var</span> int_day, int_hour, int_minute, int_second;</span><br><span class="line">                time_now = <span class="keyword">new</span> <span class="built_in">Date</span>();   <span class="comment">//开始时间</span></span><br><span class="line">                time_now = time_now.getTime();   <span class="comment">//开始时间戳</span></span><br><span class="line">                time_distance = time_end - time_now;  <span class="comment">// 结束时间戳-开始时间戳</span></span><br><span class="line">            <span class="keyword">if</span> (time_distance &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                int_day = <span class="built_in">Math</span>.floor(time_distance / <span class="number">86400000</span>)</span><br><span class="line">                time_distance -= int_day * <span class="number">86400000</span>;</span><br><span class="line">                int_hour = <span class="built_in">Math</span>.floor(time_distance / <span class="number">3600000</span>)</span><br><span class="line">                time_distance -= int_hour * <span class="number">3600000</span>;</span><br><span class="line">                int_minute = <span class="built_in">Math</span>.floor(time_distance / <span class="number">60000</span>)</span><br><span class="line">                time_distance -= int_minute * <span class="number">60000</span>;</span><br><span class="line">                int_second = <span class="built_in">Math</span>.floor(time_distance / <span class="number">1000</span>)</span><br><span class="line">                <span class="keyword">if</span> (int_hour &lt; <span class="number">10</span>)</span><br><span class="line">                    int_hour = <span class="string">"0"</span> + int_hour;</span><br><span class="line">                <span class="keyword">if</span> (int_minute &lt; <span class="number">10</span>)</span><br><span class="line">                    int_minute = <span class="string">"0"</span> + int_minute;</span><br><span class="line">                <span class="keyword">if</span> (int_second &lt; <span class="number">10</span>)</span><br><span class="line">                    int_second = <span class="string">"0"</span> + int_second;</span><br><span class="line">                    str_time = int_hour + <span class="string">"hr "</span> + int_minute + <span class="string">"min "</span>+<span class="string">" cutdown"</span>;</span><br><span class="line">                    that.setState(&#123;<span class="attr">value</span>:str_time&#125;);</span><br><span class="line">                    value(str_time)</span><br><span class="line">                    <span class="keyword">if</span>(int_hour==<span class="string">"0"</span> &amp;&amp;  int_minute==<span class="string">"0"</span>)&#123;</span><br><span class="line">                        actions.getWidth(&#123; <span class="attr">leave_id</span>: leaveID, <span class="attr">status_type</span>: <span class="number">-1</span> &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    render () &#123;</span><br><span class="line">        </span><br><span class="line">       <span class="keyword">return</span> ( <span class="xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;this.state.value&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> CountDown;</span><br></pre></td></tr></table></figure><p> 调用 （前提是你已经在component里面创建文件夹并有返回内容）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> CountDown <span class="keyword">from</span> <span class="string">'component/CountDown'</span>;</span><br><span class="line"></span><br><span class="line">&lt;CountDown time=&#123;data.close_time&#125;&gt;<span class="xml"><span class="tag">&lt;/<span class="name">CountDown</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>说明，<br>倒计时如果你想使用setTimeout（）, 那么就需要在生命完成函数立即调用一次，和开始进入函数之前调用一次，总共两次。<br>如果使用setInterval（），只需要调用一次即可。<br>倒计时插件适用于移动和PC，具体样式没有太多说明，需要自己write。<br>倒计时插件传入参数为结束时间，默认的开始时间为当前时间。<br>倒计时插件返回值为 时 和 分，如需要天数和秒数自行添加，代码已经呈现。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello EveryBody</title>
    <link href="https://qiguiao.github.io/2018/04/27/hello-world/"/>
    <id>https://qiguiao.github.io/2018/04/27/hello-world/</id>
    <published>2018-04-27T09:46:32.805Z</published>
    <updated>2018-07-23T09:36:43.107Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to my blog</p><h3 id="Introduce-oneself-to"><a href="#Introduce-oneself-to" class="headerlink" title="Introduce oneself to"></a>Introduce oneself to</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名： 齐贵奥 <span class="meta">&amp;&amp; Jaket</span></span><br><span class="line"></span><br><span class="line">职业： web前端开发工程师</span><br><span class="line"></span><br><span class="line">自我评价: 深度互联网从业人员，对互联网保持高度的敏感性和关注度，熟悉开发流程，有很强的 学习能力、需求分析、设计思路，有良好的语言沟通能力和良好的逻辑能力和团队协作能力。</span><br></pre></td></tr></table></figure><h3 id="Technology-stack"><a href="#Technology-stack" class="headerlink" title="Technology stack"></a>Technology stack</h3><ul><li>熟练使用 HTML5/CSS3 及 LESS 和 SASS 等 css 预处理器，有 bootstrap 开发经验</li><li>熟练掌握 JavaScript 语言和 JQuery 库, 熟练使用 Iscroll、Swiper 等插件</li><li>熟悉 npm、yarn 包管理工具，掌握 git，sourceTree 等分工合作代码管理工具，同步开发</li><li>熟练掌握微信小程序开发，根据官方API进项项目协作开发和管理</li><li>熟练掌握 Webpack 等自动化构建工具，封装底层常用框架</li><li>掌握 ajax、fetch、axios 等通信手段，掌握跨域手段及解决方案</li><li>熟悉 Node.js，了解 ES6，熟练使用，vue，react 框架</li><li>熟练运用 Hexo Element iview antd UI框架进行项目开发</li><li>了解后端语言php，了解后端laravel框架，TP框架。</li></ul><h3 id="More-info"><a href="#More-info" class="headerlink" title="More info"></a>More info</h3><ul><li><a href="https://juejin.im/user/59720b806fb9a06ba4746f3f/posts" target="_blank" rel="noopener"> 掘金–Jacket_7o </a></li><li><a href="https://github.com/qiguiao" target="_blank" rel="noopener"> github–qiguiao </a></li><li><a href="https://qiguiao.github.io" target="_blank" rel="noopener"> 个人博客–jaket </a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to my blog&lt;/p&gt;
&lt;h3 id=&quot;Introduce-oneself-to&quot;&gt;&lt;a href=&quot;#Introduce-oneself-to&quot; class=&quot;headerlink&quot; title=&quot;Introduce oneself to&quot;&gt;&lt;/a&gt;
      
    
    </summary>
    
    
  </entry>
  
</feed>
